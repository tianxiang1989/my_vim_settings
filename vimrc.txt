" -----------------------------------------------------------------------------
"  judging os is windowns or linux
" -----------------------------------------------------------------------------
let g:iswindows = 0
let g:islinux = 0
if(has("win32") || has("win64") || has("win95") || has("win16"))
    let g:iswindows = 1
else
    let g:islinux = 1
endif
" -----------------------------------------------------------------------------
"  windowns&linux setting
" -----------------------------------------------------------------------------
set nocompatible
call pathogen#infect() "use pathogen

let &termencoding=&encoding " set terminal conding
set fileencodings=utf-8,gbk " set file enconding
set nu "show line number
"set clipboard+=unnamed " press y/p can copy/paste to system clipboard
set sw=4 " shiftwidth=4
set ts=4 " tabstop=4 one tab=4 space
set et " automatic transfer tab to space
set autochdir " auto change dir
set nobackup " do not keep a backup file

set ruler " show current cursor's row and column
set history=200 " set remember history
set hlsearch " high light rearch result
set autoindent "auto indent

imap <F5> <C-R>=strftime("liuxq %Y.%m.%d ")<CR>

""""""""""set NerdTree hotkey"""""""""
map <F3> :NERDTreeMirror<CR>
map <F3> :NERDTreeToggle<CR>
""""""rainbow_parentheses.vim"""""
let g:rbpt_colorpairs = [
            \ ['brown',       'RoyalBlue3'],
            \ ['Darkblue',    'SeaGreen3'],
            \ ['darkgray',    'DarkOrchid3'],
            \ ['darkgreen',   'firebrick3'],
            \ ['darkcyan',    'RoyalBlue3'],
            \ ['darkred',     'SeaGreen3'],
            \ ['darkmagenta', 'DarkOrchid3'],
            \ ['brown',       'firebrick3'],
            \ ['gray',        'RoyalBlue3'],
            \ ['black',       'SeaGreen3'],
            \ ['darkmagenta', 'DarkOrchid3'],
            \ ['Darkblue',    'firebrick3'],
            \ ['darkgreen',   'RoyalBlue3'],
            \ ['darkcyan',    'SeaGreen3'],
            \ ['darkred',     'DarkOrchid3'],
            \ ['red',         'firebrick3'],
            \ ]
let g:rbpt_loadcmd_toggle = 6
let g:rbpt_max = 16

au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces
"""""""""Tlist"""""""""""""
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
map <F4> :Tlist<CR>
"""""""""Toggle gvim Menu and Toolbar""""""""
set guioptions-=m
set guioptions-=T
map <silent> <F2> :if &guioptions =~# 'T' <Bar>
            \set guioptions-=T <Bar>
            \set guioptions-=m <bar>
            \else <Bar>
            \set guioptions+=T <Bar>
            \set guioptions+=m <Bar>
            \endif<CR>
" -----------------------------------------------------------------------------
"  windowns setting
" -----------------------------------------------------------------------------
if (g:iswindows)
    source $VIMRUNTIME/vimrc_example.vim
    source $VIMRUNTIME/mswin.vim
    behave mswin

    set shortmess=atI "start without AD
    """""""""""set windows vim/gvim color scheme"""""""""""
    if has('gui_running')
        colorscheme lucius "set gvim theme
        "let g:molokai_original = 1
        "colorscheme molokai
        """""""""""fullscreen gvim hotkey"""""""""""""""""""
        map <F11> <Esc>:call libcallnr("gvimfullscreen.dll", "ToggleFullScreen", 0)<CR>
        """"""""""""""highlight current line""""""""""""""""""
        set cursorline
    else
        colorscheme desert "set vim theme
    endif
    """"""""in insert mode,transfer xdt to date string"""""""""""""
    iab xdt <c-r>=strftime("=======20%y.%m.%d=======")<cr>
    """"""""""""""""""""SuperTab""""""""""""""""""""
    let g:SuperTabDefaultCompletionType="context"
    """"""""""""""""""""""""""""""""""""""""""""""""
    " let g:syntastic_java_javac_classpath = "D:\\android-sdks\\platforms\\android-22\\*.jar;D:\\workspaceNew\\14_CustomPopupWindow\\bin\\classes"
    " set statusline+=%#warningmsg#
    " set statusline+=%{SyntasticStatuslineFlag()}
    " set statusline+=%*
    "
    " let g:syntastic_always_populate_loc_list = 1
    " let g:syntastic_auto_loc_list = 1
    " let g:syntastic_check_on_open = 1
    " let g:syntastic_check_on_wq = 0
endif

" -----------------------------------------------------------------------------
"  linux setting
" -----------------------------------------------------------------------------
if (g:islinux)
    " This line should not be removed as it ensures that various options are
    " properly set to work with the Vim-related packages available in Debian.
    runtime! debian.vim

    " Vim5 and later versions support syntax highlighting. Uncommenting the next
    " line enables syntax highlighting by default.
    if has("syntax")
        syntax on
    endif

    " If using a dark background within the editing area and syntax highlighting
    " turn on this option as well
    set background=dark

    " Uncomment the following to have Vim jump to the last position when
    " reopening a file
    if has("autocmd")
        au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
    endif

    " The following are commented out as they cause vim to behave a lot
    " differently from regular Vi. They are highly recommended though.
    set showcmd          " Show (partial) command in status line.
    set showmatch          " Show matching brackets.
    "set ignorecase          " Do case insensitive matching
    "set smartcase          " Do smart case matching
    set incsearch          " Incremental search
    "set autowrite          " Automatically save before commands like :next and :make
    "set hidden             " Hide buffers when they are abandoned
    "set mouse=a          " Enable mouse usage (all modes)

    " Source a global configuration file if available
    if filereadable("/etc/vim/vimrc.local")
        source /etc/vim/vimrc.local
    endif

    """"""""""""""highlight current line""""""""""""""""""
    set cursorline
    """"""set linux colorscheme""""""""
    set t_Co=256 " set 256 RBG
    colorscheme lucius
    LuciusDark
    """""""""ctags"""""""""""""
    map <C-F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>  "combile ctags
    """"""OmniCppComplete"""""""
    filetype plugin on
endif
